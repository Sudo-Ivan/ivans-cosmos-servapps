{
  "cosmos-installer": {
    "form": [
      {
        "name": "dataPath",
        "label": "Where should Linkwarden store its data?",
        "initialValue": "{DefaultDataPath}/linkwarden",
        "type": "text"
      },
      {
        "name": "nextAuthSecret",
        "label": "Set a secure secret for NextAuth (required)",
        "type": "password"
      },
      {
        "name": "useOllama",
        "label": "Enable Ollama AI integration?",
        "type": "boolean",
        "initialValue": false
      },
      {
        "name": "ollamaEndpoint",
        "label": "Ollama endpoint URL (if enabled)",
        "type": "text",
        "initialValue": "http://localhost:11434",
        "showIf": "useOllama"
      },
      {
        "name": "ollamaModel",
        "label": "Ollama model to use (if enabled)",
        "type": "text",
        "initialValue": "phi3:mini-4k",
        "showIf": "useOllama"
      }
    ]
  },
  "minVersion": "0.7.6",
  "services": {
    "{ServiceName}": {
      "image": "ghcr.io/linkwarden/linkwarden:latest",
      "container_name": "{ServiceName}",
      "restart": "unless-stopped",
      "UID": 1000,
      "GID": 1000,
      "environment": [
        "PUID=1000",
        "PGID=1000",
        "TZ=auto",
        "NEXTAUTH_URL=https://{Context.host}/api/v1/auth",
        "NEXTAUTH_SECRET={Context.nextAuthSecret}",
        "POSTGRES_PASSWORD={RandomString}",
        "DATABASE_URL=postgresql://postgres:{RandomString}@db:5432/linkwarden",
        {"condition": "Context.useOllama", "value": "NEXT_PUBLIC_OLLAMA_ENDPOINT_URL={Context.ollamaEndpoint}"},
        {"condition": "Context.useOllama", "value": "OLLAMA_MODEL={Context.ollamaModel}"}
      ],
      "labels": {
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://Sudo-Ivan.github.io/ivans-cosmos-servapps/servapps/Linkwarden/icon.jpg"
      },
      "volumes": [
        {
          "source": "{Context.dataPath}/db",
          "target": "/var/lib/postgresql/data",
          "type": "bind"
        }
      ],
      "routes": [
        {
          "name": "{ServiceName}",
          "description": "Expose {ServiceName} to the web",
          "useHost": true,
          "target": "http://{ServiceName}:3000",
          "mode": "SERVAPP",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "BlockCommonBots": true,
          "SmartShield": {
            "Enabled": true
          }
        }
      ]
    }
  }
} 